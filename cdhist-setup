#!/bin/bash
# User setup script.
# (C) Mark Blakeney, Aug 2016.

PROG="$(basename $0)"
NAME=${PROG%-*}

BINDIR="/usr/bin"
DOCDIR="/usr/share/doc/$NAME"
CNFDIR="/etc"

usage() {
    echo "Usage:"
    echo "As root: sudo $PROG install|uninstall"
    echo "As user: $PROG clean"
    echo
    echo "(-d option sets DESTDIR for install/uninstall)"
    exit 1
}

# Process command line options
DESTDIR=""
while getopts d: c; do
    case $c in
    d) DESTDIR="$OPTARG";;
    \?) usage;;
    esac
done

shift $((OPTIND - 1))

if [[ $# -ne 1 ]]; then
    usage
fi

cmd="$1"

if [[ $cmd == install || $cmd == uninstall ]]; then
    DESTDIR="${DESTDIR%%+(/)}"
    if [[ -z $DESTDIR && $(id -un) != root ]]; then
	echo "Install or uninstall must be run as sudo/root."
	exit 1
    fi

    # Remove any old configuration from earlier versions of program
    rm -f $DESTDIR/usr/local/bin/$NAME
    rm -f $DESTDIR/usr/local/etc/bashrc_$NAME

    if [[ $cmd == install ]]; then
	install -CDv -m 755 -t $DESTDIR$BINDIR $NAME-setup
	install -CDv -m 755 -t $DESTDIR$BINDIR $NAME.py
	install -CDv -m 644 -t $DESTDIR$CNFDIR $NAME.bashrc
	install -CDv -m 644 -t $DESTDIR$DOCDIR README.md

	# Also install HTML file if markdown is available
	if hash markdown &>/dev/null; then
	    markdown -o $DESTDIR$DOCDIR/README.html README.md
	fi
    else
	rm -rfv $DESTDIR$BINDIR/$NAME.py
	rm -rfv $DESTDIR$CNFDIR/$NAME.bashrc
	rm -rfv $DESTDIR$DOCDIR
	rm -rfv $DESTDIR$BINDIR/$NAME-setup
    fi
elif [[ $cmd == clean ]]; then
    if [[ $(id -un) == root ]]; then
	echo "This command must be run as your own user."
	exit 1
    fi

    # Remove any old configuration from earlier versions of program
    rm -fv ~/bin/$NAME
    rm -fv ~/.local/bin/$NAME
    rm -fv ~/.bashrc_$NAME
else
    usage
fi

exit 0
